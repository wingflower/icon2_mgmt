version: "3"

services:
  fastapi:
    image: ${FASTAPI_IMAGE}
    build:
      context: .
      dockerfile : ${FASTAPI_DOCKERFILE}
    restart: on-failure
    container_name: ${FASTAPI_CONTAINER}
    depends_on:
      - postgres
      # ports:
      #   - ${FASTAPI_HOST_PORT}:10004
    volumes:
      - ${APP_DIR}:/app/was/app
      - ${REQUIREMENTS}:/app/was/requirements.txt
    entrypoint: ["uvicorn"]
    command:
      - "app.main:app"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "10004"
    networks:
      backend-network:
        ipv4_address: ${FASTAPI_IP}

  nginx:
    image: ${NGINX_IMAGE}
    container_name: ${NGINX_CONTAINER}
    depends_on:
      - fastapi
    restart: on-failure
    ports:
      - ${NGINX_HOST_PORT}:80
    volumes:
      - ${NGINX_CONF}:/etc/nginx/nginx.conf
      - ${NGINX_CONF_DIR}:/etc/nginx/conf.d
      - ${NGINX_LOGS}:/var/log/nginx
    networks:
      backend-network:
        ipv4_address: ${NGINX_IP}

  postgres:
    image: ${POSTGRES_IMAGE}
    restart: always
    container_name: ${POSTGRES_CONTAINER}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=${POSTGRES_TZ}
        # ports:
        #   - ${POSTGRES_HOST_PORT}:5432
    volumes:
      - ${POSTGRES_DATA}:/var/lib/postgresql/data
    networks:
      backend-network:
        ipv4_address: ${POSTGRES_IP}

  adminer:
    image: ${ADMINER_IMAGE}
    restart: always
    container_name: ${ADMINER_CONTAINER}
    ports:
      - ${ADMINER_HOST_PORT}:8080
    depends_on:
      - postgres
    networks:
      backend-network:
        ipv4_address: ${ADMINER_IP}

  pgadmin:
    depends_on:
      - postgres
    image: ${PGADMIN_IMAGE}
    restart: always
    container_name: ${PGADMIN_CONTAINER}
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    ports:
      - ${PGADMIN_HOST_PORT}:${PGADMIN_LISTEN_PORT}
    networks:
      backend-network:
        ipv4_address: ${PGADMIN_IP}

networks:
  backend-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}
